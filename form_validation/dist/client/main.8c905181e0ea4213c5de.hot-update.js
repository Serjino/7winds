webpackHotUpdate("main",{

/***/ "./src/shared/App.tsx":
/*!****************************!*\
  !*** ./src/shared/App.tsx ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.App = void 0;\r\nvar react_1 = __importDefault(__webpack_require__(/*! react */ \"./node_modules/react/index.js\"));\r\n__webpack_require__(/*! ./main.global.css */ \"./src/shared/main.global.css\");\r\nvar root_1 = __webpack_require__(/*! react-hot-loader/root */ \"./node_modules/react-hot-loader/root.js\");\r\nvar app_css_1 = __importDefault(__webpack_require__(/*! ./app.css */ \"./src/shared/app.css\"));\r\nvar react_2 = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\r\nvar validityRules = {\r\n    name: {\r\n        regexp: /^[A-Za-zА-Яа-яёЁ]+$/i,\r\n        notice: 'Только русские/английские буквы, без пробелов',\r\n    },\r\n    email: {\r\n        regexp: /^([\\w\\.\\-]+)@([\\w\\-]+)((\\.(\\w){2,3})+)$/,\r\n        notice: 'Введите email в формате xxxx@xxxx.xx',\r\n    },\r\n    tel: {\r\n        regexp: /^[0-9]{11}$/,\r\n        notice: 'Введите телефон в формате 89991234567',\r\n    },\r\n    date: {\r\n        regexp: /^[0-9]{4}\\-[0-9]{2}\\-[0-9]{2}$/,\r\n        notice: 'Введите дату в формате ДД.ММ.ГГГГ',\r\n    },\r\n    checkbox: {\r\n        regexp: /[]/,\r\n        notice: 'Вы должны согласиться на обработку персональных данных',\r\n    },\r\n};\r\nfunction checkValidityAndSubmit(e) {\r\n    var form = e.target;\r\n    var notices = form.getElementsByTagName('span');\r\n    var inputs = form.getElementsByTagName('input');\r\n    var checkboxInput;\r\n    var checkboxNotice;\r\n    for (var i = 0; i < inputs.length; i++) {\r\n        if (inputs[i].name == \"checkbox\") {\r\n            checkboxInput = inputs[i];\r\n            var checkboxLabel = checkboxInput.closest('label');\r\n            checkboxNotice = checkboxLabel === null || checkboxLabel === void 0 ? void 0 : checkboxLabel.getElementsByTagName('span')[0];\r\n        }\r\n    }\r\n    for (var i = 0; i < notices.length; i++) {\r\n        if (notices[i].textContent !== \"\" || inputs[i].value == \"\" || !(checkboxInput === null || checkboxInput === void 0 ? void 0 : checkboxInput.checked)) {\r\n            e.preventDefault();\r\n            if (inputs[i].value == \"\") {\r\n                notices[i].textContent = \"Заполните пустое поле\";\r\n            }\r\n            if (!(checkboxInput === null || checkboxInput === void 0 ? void 0 : checkboxInput.checked)) {\r\n                if (checkboxNotice != undefined) {\r\n                    checkboxNotice.textContent = \"\" + validityRules.checkbox.notice;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction checkInputValidity(e) {\r\n    var input = e.target;\r\n    var inputName = input.name;\r\n    var label = input.closest('label');\r\n    var notice = label === null || label === void 0 ? void 0 : label.getElementsByTagName('span')[0];\r\n    if (notice != undefined) {\r\n        if (inputName === \"checkbox\" && !input.checked) {\r\n            return \"\" + validityRules[inputName].notice;\r\n        }\r\n        if (inputName === \"checkbox\" && input.checked) {\r\n            return '';\r\n        }\r\n        else if (input.value.match(validityRules[inputName].regexp) != null) {\r\n            return '';\r\n        }\r\n        else {\r\n            return \"\" + validityRules[inputName].notice;\r\n        }\r\n    }\r\n    return '';\r\n}\r\nfunction InputComponent(props) {\r\n    var _a = react_2.useState(\"\"), validNotice = _a[0], setValidNotice = _a[1];\r\n    return (react_1.default.createElement(\"label\", { className: app_css_1.default[props.labelClass] },\r\n        props.labelText,\r\n        react_1.default.createElement(\"input\", { className: app_css_1.default[props.inputClass], name: props.name, type: props.type, onChange: function (e) { setValidNotice(checkInputValidity(e)); }, autoComplete: \"off\" }),\r\n        react_1.default.createElement(\"span\", { className: app_css_1.default[props.validityNoticeClass] }, validNotice)));\r\n}\r\nfunction CheckboxComponent(props) {\r\n    var _a = react_2.useState(\"\"), validNotice = _a[0], setValidNotice = _a[1];\r\n    return (react_1.default.createElement(\"label\", { className: [app_css_1.default[props.labelClass], app_css_1.default[props.labelCheckBoxClass]].join(' ') },\r\n        react_1.default.createElement(\"p\", { className: app_css_1.default[props.CheckboxTextClass] }, props.checkboxText),\r\n        react_1.default.createElement(\"input\", { className: app_css_1.default[props.input], name: props.name, type: props.type, onChange: function (e) { setValidNotice(checkInputValidity(e)); } }),\r\n        react_1.default.createElement(\"span\", { className: app_css_1.default[props.validityNoticeClass] }, validNotice)));\r\n}\r\nfunction AppComponent() {\r\n    return (react_1.default.createElement(\"form\", { className: app_css_1.default.form, action: \"https://jsonplaceholder.typicode.com/posts\", method: \"POST\", onSubmit: function (e) { return checkValidityAndSubmit(e); } },\r\n        react_1.default.createElement(\"fieldset\", null,\r\n            react_1.default.createElement(\"legend\", null, \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"),\r\n            react_1.default.createElement(InputComponent, { labelClass: \"label\", inputClass: \"input\", validityNoticeClass: \"validityNotice\", type: \"text\", name: \"name\", labelText: \"\\u0418\\u043C\\u044F\" }),\r\n            react_1.default.createElement(InputComponent, { labelClass: \"label\", inputClass: \"input\", validityNoticeClass: \"validityNotice\", type: \"email\", name: \"email\", labelText: \"Email\" }),\r\n            react_1.default.createElement(InputComponent, { labelClass: \"label\", inputClass: \"input\", validityNoticeClass: \"validityNotice\", type: \"tel\", name: \"tel\", labelText: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\" }),\r\n            react_1.default.createElement(InputComponent, { labelClass: \"label\", inputClass: \"input\", validityNoticeClass: \"validityNotice\", type: \"date\", name: \"date\", labelText: \"\\u0414\\u0430\\u0442\\u0430\" }),\r\n            react_1.default.createElement(CheckboxComponent, { labelClass: \"label\", labelCheckBoxClass: \"labelCheckbox\", CheckboxTextClass: \"agrText\", checkboxText: \"\\u042F \\u0441\\u043E\\u0433\\u043B\\u0430\\u0441\\u0435\\u043D \\u043D\\u0430 \\u043E\\u0431\\u0440\\u0430\\u0431\\u043E\\u0442\\u043A\\u0443 \\u043F\\u0435\\u0440\\u0441\\u043E\\u043D\\u0430\\u043B\\u044C\\u043D\\u044B\\u0445 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\", inputClass: \"input\", validityNoticeClass: \"validityNotice\", type: \"checkbox\", name: \"checkbox\" }),\r\n            react_1.default.createElement(\"input\", { className: app_css_1.default.submitBtn, type: \"submit\", value: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\" }))));\r\n}\r\nexports.App = root_1.hot(AppComponent);\r\n\n\n//# sourceURL=webpack:///./src/shared/App.tsx?");

/***/ })

})